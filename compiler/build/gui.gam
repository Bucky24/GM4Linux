[sprites]
[/sprites]
[fonts]
font3
[/fonts]
[objects]
[object]
obj_objbutton
-1
0
[action]
create
width = 90;
height = 20;
text = "objects";
status = "up";
tick = 0;
[/action]
[action]
draw
draw_line(x,y,x+width,y);
draw_line(x,y,x,y+height);
draw_line(x,y+height,x+width,y+height);
draw_line(x+width,y,x+width,y+height);
draw_text(text,x,y);
if (status == "down") {
	draw_rectangle(x,y,x+width,y+height);
}
[/action]
[action]
globalmousepressed_left
if (mouse_x >= x && mouse_x <= x+width && mouse_y >= y && mouse_y <= y+height) {
	status = "down";
}
[/action]
[action]
globalmousereleased_left
if (mouse_x >= x && mouse_x <= x+width && mouse_y >= y && mouse_y <= y+height && status == "down") {
	//cout << "clicky" << endl;
	if (tick == 0) {
		tick = 1;
		global.showObjects = 1;
	} else {
		tick = 0;
		global.showObjects = 0;
	}
	//cout << global.showObjects << endl;
}
status = "up";
[/action]
[/object]
[object]
obj_load_game
-1
5
[action]
create
width = 90;
height = 20;
text = "load game";
status = "up";
tick = 0;
[/action]
[action]
draw
draw_line(x,y,x+width,y);
draw_line(x,y,x,y+height);
draw_line(x,y+height,x+width,y+height);
draw_line(x+width,y,x+width,y+height);
draw_text(text,x,y);
if (status == "down") {
	draw_rectangle(x,y,x+width,y+height);
}
[/action]
[action]
globalmousepressed_left
if (mouse_x >= x && mouse_x <= x+width && mouse_y >= y && mouse_y <= y+height) {
	status = "down";
}
[/action]
[action]
globalmousereleased_left
if (mouse_x >= x && mouse_x <= x+width && mouse_y >= y && mouse_y <= y+height && status == "down") {
	cout << "loading game " << endl;
	filePointer = file_text_open_read("saveGame.gam");

	// 0=none, 1=sprites, 2=objects, 3=object, 4=object action, 5=rooms, 6=room, 7=room instances, 8=font
	mode = 0;
	type = "";
	code = "";
	name = "";
	skip = 0;
	while (!file_text_eof(filePointer)){
		line = file_text_read_string(filePointer);
		if (line == "[sprites]" && mode == 0) {
			mode = 1;
			type = "spr";
			code = "";
		} else if (line == "[/sprites]" && mode == 1) {
			mode = 0;
			type = "";
		} else if (line == "[objects]" && mode == 0) {
			mode = 2;
			type = "obj";
			code = "";
			name = "";
		} else if (line == "[/objects]" && mode == 2) {
			mode = 0;
			type = "";
		} else if (line == "[object]" && mode == 2) {
			mode = 3;
		} else if (line == "[/object]" && mode == 3) {
			mode = 2;
			ds_list_add(global.objectNames,name);
			ds_list_add(global.objectCode,code);
			ds_list_add(global.objectTypes,type);
		} else if (line == "[rooms]" && mode == 0) {
			mode = 5;
			type = "rm_";
			code = "";
			name = "";
		} else if (line == "[/rooms]" && mode == 5) {
			mode = 0;
			type = "";
		} else if (line == "[room]" && mode == 5) {
			mode = 6;
		} else if (line == "[/room]" && mode == 6) {
			mode = 5;
			ds_list_add(global.objectNames,name);
			ds_list_add(global.objectCode,code);
			ds_list_add(global.objectTypes,type);
		} else if (line == "[fonts]") {

		} else if (line == "[/fonts]" && mode == 8) {
			
		} else {
			if (name == "" && (type == "obj" || type == "rm_")) {
				cout << "name set" << endl;
				name = line;
				skip ++;
			} else if ((type == "obj" && skip <= 2) || (type == "rm_" && skip <= 1)) {
				cout << "skip" << endl;
				skip ++;
			} else if (type == "spr") {
				ds_list_add(global.objectNames,line);
				ds_list_add(global.objectCode,code);
				ds_list_add(global.objectTypes,type);
			} else {
				for (i=0;i<string_length(line);i++) {
					chr = string_char_at(line,i);
					if (chr == "#") {
						code += "\#";
					} else {
						code += chr;
					}
				}
				code += "#";
			}
		}
		cout << line << " " << mode << endl;
		file_text_readln(filePointer);
	}

	file_text_close(filePointer);
}
status = "up";
[/action]
[/object]
[object]
obj_save_game
-1
4
[action]
create
width = 90;
height = 20;
text = "save game";
status = "up";
tick = 0;
[/action]
[action]
draw
draw_line(x,y,x+width,y);
draw_line(x,y,x,y+height);
draw_line(x,y+height,x+width,y+height);
draw_line(x+width,y,x+width,y+height);
draw_text(text,x,y);
if (status == "down") {
	draw_rectangle(x,y,x+width,y+height);
}
[/action]
[action]
globalmousepressed_left
if (mouse_x >= x && mouse_x <= x+width && mouse_y >= y && mouse_y <= y+height) {
	status = "down";
}
[/action]
[action]
globalmousereleased_left
if (mouse_x >= x && mouse_x <= x+width && mouse_y >= y && mouse_y <= y+height && status == "down") {
	//cout << "clicky" << endl;
	/*if (tick == 0) {
		tick = 1;
		global.showObjects = 1;
	} else {
		tick = 0;
		global.showObjects = 0;
	}*/
	//cout << global.showObjects << endl;
	cout << "saving game " << endl;
	filePointer = file_text_open_write("saveGame.gam");
	file_text_write_string(filePointer,"[sprites]");
	file_text_writeln(filePointer);
	for (i=0;i<ds_list_size(global.objectNames);i++) {
		if (ds_list_find_value(global.objectTypes,i) == "spr") {
			file_text_write_string(filePointer,ds_list_find_value(global.objectNames,i));
			file_text_writeln(filePointer);
		}
	}

	file_text_write_string(filePointer,"[/sprites]");
	file_text_writeln(filePointer);
	file_text_write_string(filePointer,"[fonts]");
	file_text_writeln(filePointer);
	file_text_write_string(filePointer,"[/fonts]");
	file_text_writeln(filePointer);
	file_text_write_string(filePointer,"[objects]");
	file_text_writeln(filePointer);
	for (i=0;i<ds_list_size(global.objectNames);i++) {
		if (ds_list_find_value(global.objectTypes,i) == "obj") {
			file_text_write_string(filePointer,"[object]");
			file_text_writeln(filePointer);
			file_text_write_string(filePointer,ds_list_find_value(global.objectNames,i));
			file_text_writeln(filePointer);
			file_text_write_string(filePointer,"-1");
			file_text_writeln(filePointer);
			file_text_write_string(filePointer,string(i));
			file_text_writeln(filePointer);

			str = ds_list_find_value(global.objectCode,i);
			drstr = "";
			for (j=0;j<string_length(str);j++) {
				ch = string_char_at(str,j);
				if (ch == "#" && escaped == 0) {
					file_text_write_string(filePointer,drstr);
					file_text_writeln(filePointer);
					drstr = "";
				} else {
					if (ch == "\" && escaped == 0) {
						escaped = 1;
					} else {
						drstr += ch;
						escaped = 0;
					}
				}
			}
			file_text_write_string(filePointer,drstr);
			file_text_writeln(filePointer);

			file_text_write_string(filePointer,"[/object]");
			file_text_writeln(filePointer);
		}
	}
	file_text_write_string(filePointer,"[/objects]");
	file_text_writeln(filePointer);
	file_text_write_string(filePointer,"[rooms]");
	file_text_writeln(filePointer);
	for (i=0;i<ds_list_size(global.objectNames);i++) {
		if (ds_list_find_value(global.objectTypes,i) == "rm_") {
			file_text_write_string(filePointer,"[room]");
			file_text_writeln(filePointer);
			file_text_write_string(filePointer,ds_list_find_value(global.objectNames,i));
			file_text_writeln(filePointer);
			file_text_write_string(filePointer,string(i));
			file_text_writeln(filePointer);

			str = ds_list_find_value(global.objectCode,i);
			drstr = "";
			for (j=0;j<string_length(str);j++) {
				ch = string_char_at(str,j);
				if (ch == "#" && escaped == 0) {
					file_text_write_string(filePointer,drstr);
					file_text_writeln(filePointer);
					drstr = "";
				} else {
					if (ch == "\" && escaped == 0) {
						escaped = 1;
					} else {
						drstr += ch;
						escaped = 0;
					}
				}
			}
			file_text_write_string(filePointer,drstr);
			file_text_writeln(filePointer);

			file_text_write_string(filePointer,"[/room]");
			file_text_writeln(filePointer);
		}
	}
	file_text_write_string(filePointer,"[/rooms]");
	file_text_close(filePointer);
}
status = "up";
[/action]
[/object]
[object]
obj_objnewobject
-1
0
[action]
create
width = 100;
height = 20;
text = "newobject";
status = "up";
[/action]
[action]
draw
if (global.showObjects == 1) {
	draw_line(x,y,x+width,y);
	draw_line(x,y,x,y+height);
	draw_line(x,y+height,x+width,y+height);
	draw_line(x+width,y,x+width,y+height);
	draw_text(text,x,y);
	if (status == "down") {
		draw_rectangle(x,y,x+width,y+height);
	}
}
[/action]
[action]
globalmousepressed_left
if (mouse_x >= x && mouse_x <= x+width && mouse_y >= y && mouse_y <= y+height) {
	status = "down";
}
[/action]
[action]
globalmousereleased_left
if (mouse_x >= x && mouse_x <= x+width && mouse_y >= y && mouse_y <= y+height && status == "down") {
	ds_list_add(global.objectNames,keyboard_string);
	ds_list_add(global.objectTypes,string_copy(keyboard_string,0,3));
	cout << "adding " << string_copy(keyboard_string,0,3) << endl;
	keyboard_string = "";
	ds_list_add(global.objectCode,"");
}
status = "up";
[/action]
[/object]
[object]
obj_objects
-1
3
[action]
create
currentObject = -1;
focus = 0;
curline = 0;
maxline = 0;
[/action]
[action]
draw
//if (global.showObjects == 1) {
	draw_rectangle_color(x,y,x+180,room_height,c_white);
	draw_line(x,y,x+180,y);
	draw_line(x+180,room_height,x,room_height);
	draw_line(x,room_height,x,y);
	draw_line(x+180,y,x+180,room_height);

	ty = y;
	for (i=0;i<ds_list_size(global.objectNames);i++) {
		value = ds_list_find_value(global.objectNames,i);
		if (currentObject == i) {
			draw_rectangle_color(x,ty,x+179,ty+20,0,1,0);
		}
		draw_text(value,x,ty);
		ty += 20;
	}

	if (currentObject >= 0) {
		if (focus == 1) {
			draw_rectangle_color(x+180,y,room_width,room_height,0.8,0.8,0.8);
		} else {
			draw_rectangle_color(x+180,y,room_width,room_height,c_white);
		}
		str = ds_list_find_value(global.objectCode,currentObject);
		drstr = "";
		escaped = 0;
		tx = x+180;
		ty = y;
		lineCount = 0;
		for (i=0;i<string_length(str);i++) {
			ch = string_char_at(str,i);
			if (ch == "#" && escaped == 0) {
				if (curline == lineCount) {
					draw_rectangle_color(x+180,ty,room_width,ty+20,0.3,0.5,0.6);
					//cout << x+180 << " " << ty << " " << room_width << " " << ty+20 << endl;
				}
				draw_text(drstr,tx,ty);
				drstr = "";
				ty += 20;
				lineCount ++;
			} else {
				if (ch == "\" && escaped == 0) {
					escaped = 1;
				} else {
					drstr += ch;
					escaped = 0;
				}
			}
		}
		maxline = lineCount;
		//if (curline == lineCount) {
		//	draw_rectangle_color(x+180,ty,room_width,ty+20,0.3,0.5,0.6);
		//}
		draw_text(drstr,tx,ty);
	}
//}
[/action]
[action]
globalmousereleased_left
if (mouse_x >= x && mouse_x <= x+180 && mouse_y >= y && mouse_y <= y+room_height) {
	tempy = mouse_y-y;
	tempy = tempy/20;
	if (tempy >= 0 && tempy < ds_list_size(global.objectNames)) {
		currentObject = tempy;
		keyboard_string = "";
	}
	focus = 0;
} else if ((mouse_x >= x+180 && mouse_x <= x+room_width && mouse_y >= y && mouse_y <= y+room_height) && currentObject != -1) {
	focus = 1;
} else {
	focus = 0;
	currentObject = -1;
}
[/action]
[action]
step
if (currentObject >= 0 && focus == 1) {
	if (keyboard_string == "\" || keyboard_string == "#") {
		ds_list_find_value(global.objectCode,currentObject) += "\";
	}
	ds_list_find_value(global.objectCode,currentObject) += keyboard_string;
	keyboard_string = "";
}
[/action]
[action]
key_enter
if (currentObject >= 0 && focus == 1) {
	ds_list_find_value(global.objectCode,currentObject) += "#";
}
[/action]
[action]
key_backspace
if (currentObject >= 0 && focus == 1) {
	if (string_length(ds_list_find_value(global.objectCode,currentObject)) > 0) {
		ds_list_find_value(global.objectCode,currentObject) = string_copy(ds_list_find_value(global.objectCode,currentObject),0,string_length(ds_list_find_value(global.objectCode,currentObject))-1);
	}
}
[/action]
[action]
keyup_up
if (currentObject >= 0 && focus == 1) {
	if (curline > 0) {
		curline --;
	}
}
[/action]
[action]
keyup_down
if (currentObject >= 0 && focus == 1) {
	if (curline < (maxline-1)) {
		curline ++;
	}
}
[/action]
[action]
keydown_left
cout << "left key down" << endl;
[/action]
[action]
keyup_left
cout << "left key up" << endl;
[/action]
[/object]
[object
[object]
obj_object_name
-1
1
[action]
create
height = 20;
[/action]
[action]
draw
if (global.showObjects == 1) {
	draw_rectangle_color(x,y,room_width,y+height,c_white);
	draw_line(x,y,room_width,y);
	draw_line(room_width,y+height,x,y+height);
	draw_line(x,y+height,x,y);
	draw_line(room_width,y,room_width,y+height);

	draw_text(keyboard_string,x,y);
}
[/action]
[/object]
[object]
obj_control
-1
2
[action]
create
global.showObjects = 0;
global.objectNames = ds_list_create();
global.objectCode = ds_list_create();
global.objectTypes = ds_list_create();
[/action]
[/object]
[/objects]
[rooms]
[room]
rm_main
6
0.6,0.6,0.6
800,380
[instances]
obj_control,0,0
obj_objbutton,0,0
obj_objects,90,21
obj_objnewobject,90,0
obj_object_name,270,0
obj_save_game,0,20
obj_load_game,0,40
[/instances]
[/room]
[rooms]
